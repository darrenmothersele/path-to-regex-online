{"version":3,"file":"bundle.js","sources":["node_modules/path-to-regex/index.js","index.js"],"sourcesContent":["module.exports = Regex;\n\nconst escapeRe = /([$.+*?=!:[\\]{}(|)/\\\\])/g;\n\n\n/**\n * Класс Regex [description].\n * @constructor\n * @param {Object} options [description].\n */\nfunction Regex(path, options) {\n\tthis.init(path, options);\n\treturn this;\n}\n\nRegex.prototype.init = function(\n\tpath = \"/\",\n\toptions = {}\n) {\n\tthis.options = {\n\t\tcase: options.case || true,\n\t\tseparators: options.separators || \"/\",\n\t\tfromStart: options.fromStart || true,\n\t\ttoEnd: options.toEnd || true\n\t}\n\tthis.options.separator = \"[\" + this.escape(this.options.separators) + \"]\";\n\n\tif (path instanceof RegExp) {\n\t\tthis.restructureRegExp(path);\n\t} else if (typeof path === \"string\") {\n\t\tthis.restructurePath(path);\n\t}\n};\n\n/**\n * Метод преобразует строку с шаблоном пути, включающим в себя строковое представление регулярных выражений \n * и указадели на идентификаторы ключей в стиле Express.js в регулярное выражение\n * @param  {string} path Строка содержащая шаблон пути. Может содержать в себе регулярные выражения и объявление ключей типа :id. Поведение имитирует аналогичный функционал библиотеки Express.js v.5.x\n */\nRegex.prototype.restructureRegExp = function(regexp = /.*/) {\n\tthis.keys = [];\n\tthis.path = undefined;\n\tthis.regstr = (\"\" + regexp);\n\tthis.regstr = this.regstr.substr(1, this.regstr.length - 2);\n\tthis.regexp = new RegExp(\n\t\tthis.regstr,\n\t\tthis.options.case ? \"\" : \"i\"\n\t);\n\n}\n\n/**\n * Метод преобразует строку с шаблоном пути, включающим в себя строковое представление регулярных выражений \n * и указадели на идентификаторы ключей в стиле Express.js в регулярное выражение\n * @param  {string} path Строка содержащая шаблон пути. Может содержать в себе регулярные выражения и объявление ключей типа :id. Поведение имитирует аналогичный функционал библиотеки Express.js v.5.x\n */\nRegex.prototype.restructurePath = function(path = \"/\") {\n\tthis.keys = [];\n\tthis.path = path;\n\tthis.regstr = \"\";\n\n\tconst separator = this.options.separator;\n\tconst notseparator = \"[^\" + this.escape(this.options.separators) + \"]\";\n\n\tlet offset = 0;\n\tlet count = 0;\n\n\tpath = path.replace(new RegExp(\"^\" + separator + \"*(.*?)\" + separator + \"*$\"), \"$1\");\n\n\tpath.replace(/:([a-z]\\w*)(\\((.*?)\\))?([\\?\\*\\+])?/gi, (str, key, a, pat, quant, index, string) => {\n\t\t// console.log(\"-----------------------------\");\n\t\t// console.log(\"str:\", str);\n\t\t// console.log(\"key:\",key);\n\t\t// console.log(\"a:\",a);\n\t\t// console.log(\"pat:\",pat);\n\t\t// console.log(\"quant:\",quant);\n\t\t// console.log(\"index:\",index);\n\t\t// console.log(\"string:\",string);\n\t\tcount++;\n\n\t\t// let pq = pat?pat[pat.length-1]:\"\";\n\t\t// pq = (pq===\"+\"||pq===\"*\")?\"?\":\"\";\n\t\tconst pattern = (pat ? pat : notseparator + \"+\");\n\t\tconst isMultiple = (quant === \"*\" || quant === \"+\") ? true : false;\n\t\tconst isRequired = (quant !== \"*\" && quant !== \"?\") ? true : false;\n\t\tconst quantifier = quant ? quant : \"\";\n\n\t\t// const startChar = path.charAt(index-1);\n\t\tconst isStarted = (!index)?true:this.separator(path.charAt(index-1));\n\t\tconst isStoped = (index+str.length>=path.length)?true:this.separator(path.charAt(index+str.length));\n\t\tconst isToken = isStarted && isStoped;\n\n\t\tif (index > offset) {\n\t\t\tconst text = path.substring(offset, index);\n\t\t\tconst regstr = this.escape(text);\n\t\t\tthis.regstr += regstr;\n\t\t}\n\n\t\tif( isToken && index && ( !isMultiple  || !isRequired) )\n\t\t\tthis.regstr+=\"?\";\n\n\t\tconst regstr =\n\t\t\tisMultiple ?\n\t\t\t\tisToken?\n\t\t\t\t\t\"((?:\" + separator + \"?\" + pattern + \")\" + quantifier + \")\" :\n\t\t\t\t\t\"((?:\" + notseparator + \"*\" + pattern + \")\" + quantifier + \")\" :\n\t\t\t\tisToken?\n\t\t\t\t\t\"(\" + pattern + \"?)\" + quantifier:\n\t\t\t\t\t\"(\" + pattern + (pat?\"\":\"?\")+\")\" + quantifier;\n\n\t\tthis.regstr += regstr;\n\t\t//    /^[\\/]?foo\\/?((?:[\\/]?.+)+)[\\/]?$/\n\n\t\tconst data = {\n\t\t\tkey: key,\n\t\t\tmultiple: isMultiple,\n\t\t\trequired: isRequired,\n\t\t\tindex: count,\n\t\t\tpattern: pattern\n\t\t};\n\t\tif (isMultiple)\n\t\t\tdata.regexp = new RegExp(pattern, this.options.case ? \"g\" : \"gi\");\n\n\t\tthis.keys.push(data);\n\n\t\toffset = index + str.length;\n\t\treturn str;\n\t});\n\n\tif (offset < path.length - 1) {\n\t\tconst text = path.substring(offset);\n\t\tconst regstr = this.escape(text);\n\t\tthis.regstr += regstr;\n\t}\n\n\tthis.regexp = new RegExp(\n\t\t(this.options.fromStart ? \"^\" : \"\") +\n\t\tseparator + \"?\" +\n\t\tthis.regstr +\n\t\tseparator + \"?\" +\n\t\t(this.options.toEnd ? \"$\" : \"\"),\n\t\tthis.options.case ? \"\" : \"i\"\n\t);\n}\n\n\n\n/**\n * Метод экранирует все спец символы указанные в глобальной для модуля, переменной escapeRe\n * @param  {string} text Любая строка \n * @return {string}      Строка text, в которой все символы указанные в переменной escapeRe заэкранированы \n */\nRegex.prototype.escape = function(text) {\n\treturn text.replace(escapeRe, s => {\n\t\treturn \"\\\\\" + s\n\t});\n}\n\n/**\n * Метод проверяет является ли char одним из разделителей указанных в this.options.separators\n * @param  {string} char Cтрока содержащая в себе проверяемый символ (длинна строки должна быть равна 1)\n * @return {boolean}     Если проверяемый символ является одним из символов указанных в this.options.separators то true иначе false\n */\nRegex.prototype.separator = function(char) {\n\treturn !!(this.options.separators.indexOf(char) + 1);\n}\n\n\n\nRegex.prototype.match = function(path) {\n// console.log(\"match 01\");\n\n\tif (typeof path !== \"string\") return;\n\t\n// console.log(\"match 02\");\n\tconst result = path.match(this.regexp);\n// console.log(\"match 03\");\n\n\tif (!result) return;\n\n// console.log(\"match 04\");\n\tconst data = {};\n\n// console.log(\"match 05\");\n\tthis.keys.forEach(item => {\n\t\t// console.log(\"match foreach 01\");\n\t\tlet isMultiple = false;\n\n\t\tif (data[item.key])\n\t\t\tisMultiple = true;\n\n\n\t\tif (data[item.key] && !Array.isArray(data[item.key])) {\n\t\t\tisMultiple = true;\n\t\t\tdata[item.key] = [data[item.key]];\n\t\t}\n\n\t\tif (item.multiple && !data[item.key]) {\n\t\t\tisMultiple = true;\n\t\t\tdata[item.key] = [];\n\t\t}\n\n\t\tlet value = result[item.index]?result[item.index]:undefined;\n\n\t\tif (!isMultiple && !item.multiple) {\n\t\t\tdata[item.key] = value;\n\t\t\treturn;\n\t\t}\n\n\t\tif (isMultiple && !item.multiple && result[item.index]) {\n\t\t\tdata[item.key].push(value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (result[item.index])\n\t\t\tresult[item.index].replace(item.regexp, str => {\n\t\t\t\tif(str)\tdata[item.key].push(\n\t\t\t\t\tstr.replace(new RegExp(this.options.separator+\"*$\"), \"\")\n\t\t\t\t);\n\t\t\t});\n\n\t});\n// console.log(\"match 06\");\n\treturn data;\n};\n","import pathToRegex from 'path-to-regex';\n\nwindow.addEventListener('load', () => {\n\n  document.getElementById('path-input').addEventListener('input', e => {\n    const parser = new pathToRegex(e.target.value);\n    document.getElementById('output').innerText = parser.regexp.source;\n  });\n});\n"],"names":[],"mappings":"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"}